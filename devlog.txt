DEVELOPMENT LOG

Notes, issues, and strategies for past and upcoming features go here.



2017.7.4

The goal of this project is to automate base coloring in illustrations and animations.

We need a set of training data to teach our network how to autocolor black and white line art.
Ripping frames from professional animation clips gives us a lot of output images.
To generate input images we must extract line art from fully colored frames.

Problem: 
Line extraction should be robust for a wide range of animation styles.
Edge detection is not good for this because it is senstive to features that aren't line art.

Possible solution:
Use a combination of filters to extract the lines, of which edge detection might be one element.
Most animations color in lines that are *originally black*
We may be able to take advantage of this by using a kernel sensitive to sharp gradients towards the color black.



2017.7.13

Currently can generate a workable training set.

Problem:
Objective function doesn't optimize to desired result.

Strategies:
Need to make sure parameters aren't being stuck in local minimum. Print things out to check this.
Augmenting training data by randomizing background colors might help network become sensitive to signal.
Need to make sure network is trainable (i.e. neurons don't have bad zero-ing behavior).
Need to make sure sampler is good.



2017.7.26

Hidden neurons are far too opaque to understand at the moment.
We have opted to first train a classifier which will later be used as a side branch of the CNN.

A vector of labels from the classifier will aid in coloring because:
  The information contained in the colored images is much smaller than the max amount allowed by the image
  This information is highly correlated with a vector of labels

Since multiple characters can show up in one image, the vector will NOT be one-hot.
We will have to use something other than a softmax loss function.
  Currently experimenting with a simple dot product between guess and truth vectors.

Classifier seems to be working okay.
We need to try it on larger training and testing sets.

Next step:
Obtain larger training sets.
Add "no characters" and "other character" labels.
  Test if the above improves classification.
Feed vector of labels into main CNN.
Address problems in previous log entry.
